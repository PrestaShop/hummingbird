
name: Build ZIP File
on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  deploy:
    name: Build dependencies & create artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Copy Webpack config
        run: cp ./webpack/.env-example ./webpack/.env

      - name: Build assets
        run: npm run build

      - name: Remove unuseful data
        run: |
          rm .git/ -rf
          rm .github/ -rf
          rm .storybook/ -rf
          rm node_modules/ -rf
          rm src/ -rf
          rm stories/ -rf
          rm types/ -rf
          rm webpack/ -rf
          rm .editorconfig
          rm .eslintignore
          rm .eslintrc.js
          rm .gitignore
          rm .stylelintignore
          rm .stylelintrc
          rm babel.config.js
          rm jest.config.js
          rm package-lock.json
          rm package.json
          rm postcss.config.js
          rm tsconfig.json
          rm webpack.config.js

      - name: Create & Upload artifact
        uses: actions/upload-artifact@v1
        with:
            name: ${{ github.event.repository.name }}
            path: ./
  update_release_draft:
      runs-on: ubuntu-latest
      needs: [deploy]
      if: github.event_name == 'push' && github.event.ref == 'refs/heads/master'
      steps:
          - name: Download artifact
            uses: actions/download-artifact@v1
            with:
                name: ${{ github.event.repository.name }}

          - id: release_info
            uses: toolmantim/release-drafter@v5
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          - name: Prepare for Release
            run: |
                cd ${{ github.event.repository.name }}
                zip -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}

          - name: Clean existing assets
            shell: bash
            run: |
                curl -fsSL https://github.com/github/hub/raw/master/script/get | bash -s 2.14.1
                assets=`bin/hub api -t repos/${{ github.repository }}/releases/${{ steps.release_info.outputs.id }}/assets | awk '/\].url/ { print $2 }'`
                for asset in $assets
                do
                    bin/hub api -X DELETE $asset
                done
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          - name: Publish to GitHub Release
            uses: actions/upload-release-asset@v1.0.1
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
                upload_url: ${{ steps.release_info.outputs.upload_url }}
                asset_path: ./${{ github.event.repository.name }}/${{ github.event.repository.name }}.zip
                asset_name: ${{ github.event.repository.name }}.zip
                asset_content_type: application/zip